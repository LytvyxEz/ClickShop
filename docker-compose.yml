# services:
#   backend:
#     build:
#       context: ./backend
#       dockerfile: Dockerfile
#     container_name: shop-backend
#     command: gunicorn --bind 0.0.0.0:8000 backend.wsgi:application
#     volumes:
#       - ./backend:/app
#     env_file:
#       - ./.env
#     depends_on:
#       - db
#     networks:
#       - shop-net

#   frontend:
#     build:
#       context: ./frontend
#       dockerfile: Dockerfile
#     container_name: shop-frontend
#     ports:
#       - "3000:80"
#     networks:
#       - shop-net
    
#   nginx:
#     image: nginx:alpine
#     container_name: shop-nginx
#     volumes:
#       - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
#     ports:
#       - "8080:80"
#     depends_on:
#       - frontend
#       - backend
#     networks:
#       - shop-net

#   db:
#     image: postgres:14
#     container_name: shop-db
#     environment:
#       POSTGRES_DB: ${DB_NAME}
#       POSTGRES_USER: ${DB_USER}
#       POSTGRES_PASSWORD: ${DB_PASSWORD}
#     volumes:
#       - postgres_data:/var/lib/postgresql/data/
#     networks:
#       - shop-net

# networks:
#   shop-net:
#     driver: bridge

# volumes:
#   postgres_data:







#РОЗРОБКА
services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: shop-backend
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app
    env_file:
      - ./.env
    depends_on:
      - db
    networks:
      - shop-net
    ports:
      - "8000:8000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: shop-frontend
    ports:
      - "5173:5173"
    networks:
      - shop-net
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development

  db:
    image: postgres:14
    container_name: shop-db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - shop-net

  redis:
    image: redis:7.0-alpine
    networks:
      - shop-net


networks:
  shop-net:
    driver: bridge

volumes:
  postgres_data:
